<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">

  <xs:simpleType name="IDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NameType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[ -&lt;>-~]+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="VariableNameType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[ -&lt;>-~]+" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="AccessType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="constant" />
      <xs:enumeration value="read" />
      <xs:enumeration value="readWrite" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Peers">
    <xs:sequence>
      <xs:element name="peer" type="IDType" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="IOType">
    <xs:all>
      <xs:element name="tcp" type="xs:nonNegativeInteger" minOccurs="0" />
      <xs:element name="udp" type="xs:nonNegativeInteger" minOccurs="0" />
      <xs:element name="description" type="xs:string" minOccurs="0" />
      <xs:element name="formatDescription" type="xs:string" minOccurs="0" />
      <xs:element name="peers" type="Peers" minOccurs="0" />
      <xs:element name="peerId" type="IDType" minOccurs="0" />
      <xs:element name="require" type="xs:positiveInteger" minOccurs="0" />
    </xs:all>
    <xs:attribute name="name" type="NameType" use="required" />
  </xs:complexType>

  <xs:complexType name="Input">
    <xs:complexContent>
      <xs:extension base="IOType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Output">
    <xs:complexContent>
      <xs:extension base="IOType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="InOutput">
    <xs:complexContent>
      <xs:extension base="IOType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Variable">
    <xs:all>
      <xs:element name="access" type="AccessType" minOccurs="0" />
      <xs:element name="value" type="xs:string" minOccurs="0" />
      <xs:element name="default" type="xs:string" minOccurs="0" />
      <xs:element name="type" type="xs:string" minOccurs="0" />
      <xs:element name="description" type="xs:string" minOccurs="0" />
      <xs:element name="formatDescription" type="xs:string" minOccurs="0" />
    </xs:all>
    <xs:attribute name="name" type="VariableNameType" use="required" />
  </xs:complexType>

  <xs:simpleType name="LockResult">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ok" />
      <xs:enumeration value="failed" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Lock">
    <xs:attribute name="result" type="LockResult"  use="required"/>
    <xs:attribute name="peer" type="IDType"  use="required"/>
  </xs:complexType>

  <xs:element name="controlAnswer">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="input" type="Input" />
        <xs:element name="output" type="Output" />
        <xs:element name="inoutput" type="InOutput" />
        <xs:element name="variable" type="Variable" />
        <xs:element name="lock" type="Lock" />
        <xs:element name="unlock" type="Lock" />
      </xs:choice>
      <xs:attribute name="id" type="IDType" use="required" />
    </xs:complexType>
  </xs:element>

  <xs:element name="controlEvent">
    <xs:complexType>
      <xs:all>
        <xs:element name="variable" type="Variable" minOccurs="0"/>
      </xs:all>
    </xs:complexType>
  </xs:element>


</xs:schema>
